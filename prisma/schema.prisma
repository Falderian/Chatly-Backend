generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int            @id @default(autoincrement())
  firstName             String?
  lastName              String?
  email                 String         @unique
  password              String
  createdAt             DateTime       @default(now())
  lastActivity          DateTime       @default(now())
  messages              Message[]
  sentConversations     Conversation[] @relation("Sender")
  receivedConversations Conversation[] @relation("Receiver")

  contacts  Contact[] @relation("UserContacts")
  contactOf Contact[] @relation("UserContactOf")
}

model Contact {
  id Int @id @default(autoincrement())

  userId Int
  user   User @relation("UserContacts", fields: [userId], references: [id])

  contactId Int
  contact   User @relation("UserContactOf", fields: [contactId], references: [id])

  createdAt DateTime @default(now())

  @@unique([userId, contactId])
}

model Conversation {
  id         Int       @id @default(autoincrement())
  sender     User      @relation("Sender", fields: [senderId], references: [id])
  senderId   Int
  receiver   User      @relation("Receiver", fields: [receiverId], references: [id])
  receiverId Int
  messages   Message[]
  createdAt  DateTime  @default(now())
}

model Message {
  id             Int          @id @default(autoincrement())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender         User         @relation(fields: [senderId], references: [id])
  senderId       Int
  content        String
  createdAt      DateTime     @default(now())
  isRead         Boolean      @default(false)
}
